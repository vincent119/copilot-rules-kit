# =============================================================================
# Copilot Chat 對話與生成規範（YAML 版）
# 建議路徑：.github/copilot-chat-instructions.yaml
# 目的：定義 Chat / Agent 模式的語言與行為；統一回應格式與產物品質。
# 注意：本檔「延伸」共用基底與詞彙檔，避免重複規範。
# =============================================================================

schemaVersion: 1 # ← 若結構變更請遞增版本
description: "Copilot Chat 對話生成與程式輔助規範"
applyTo: "**/*" # ← 覆蓋整個 repo 的對話輔助

# -----------------------------------------------------------------------------
# 依賴（明確引用共用規範與詞彙對應）
# -----------------------------------------------------------------------------
extends:
  common: ".github/copilot-common.md" # ← 共用規範基底：格式、檔案操作、測試、安全等
  vocabulary: ".github/copilot-vocabulary.yaml" # ← 術語中英對應、禁用詞與正規化規則

chat:
  mode: "dialogue" # ← 對話模式
  purpose: "定義 Copilot Chat 在專案中的回應與生成行為"
  language: "zh-TW" # ← 預設使用繁體中文（台灣）

rules:
  - name: "General Principles"
    details:
      - "所有輸出須可直接執行或編譯（避免無法落地的片段）" # 與 common.md 一致：可編譯
      - "保留現有專案結構與命名慣例（最小且完整變更）" # 最小改動原則
      - "修改應延續既有風格，而非整檔覆蓋或重排不相關段落"
      - "禁止虛構不存在的 API、模組、參數或第三方依賴"
      - "禁止使用 emoji；技術符號（參數/檔名/指令）採半形 ASCII" # 與 vocabulary 約定一致
      - "縮排規範：1 個 Tab = 2 空白（YAML 實作為 2 空白）" # YAML 不用 Tab，明示採 2 空白
      - "詞彙統一：依 .github/copilot-vocabulary.yaml；衝突以該檔為準"

  - name: "Response Style"
    details:
      - "回應需自洽完整：說明前提/限制、給出可運行的解與必要備註"
      - "需求不明時，先列出明確『假設前提』再給解法與其風險"
      - "若存在多種方案：請比較取捨、標出推薦方案與風險/替代"
      - "程式碼段落需含完整 import / package / 可執行入口或最小測試"
      - "輸出使用 Markdown 結構；可直接複製貼上至專案"
      - "文件型輸出需可直接放入 README/教學/設計說明，不需再手工修補"

  - name: "Collaboration Rules"
    details:
      - "變更既有程式時，以『補丁式』呈現（明確標出前後/差異或定點區塊）"
      - "除非明確要求，避免整檔重寫；保持最小必要變更邊界"
      - "不得生成第二份 LICENSE/README/CHANGELOG 等共用文件"
      - "範例程式碼需可通過 formatter / linter（語言專用檔列版本）"
      - "YAML/JSON 生成時保留原 key 順序與縮排（必要時說明差異）"

  - name: "Error Handling & Observability"
    details:
      - "錯誤處理採 fail-fast；明確回傳與記錄，避免吞錯" # 呼應 common.md
      - "對外部 I/O/網路/雲服務加入重試與退避（並說明重試策略）"
      - "延用現有 logger/metrics/tracing 介面；勿引入新框架除非必要"
      - "在關鍵路徑補足可觀測性鉤子（含錯誤標籤、延遲量測）"

  - name: "Security & Compliance"
    details:
      - "不得硬編碼 secrets/tokens/憑證；改用既有密管機制"
      - "新增依賴需標注授權並審視相容性；禁止非相容授權"
      - "避免在日誌/文件/範例中洩漏機敏資料；必要時進行遮罩"

  - name: "Output Structure"
    example:
      markdown: |
        ### 思路簡述
        - 問題定義、假設前提、限制與邊界
        - 選用演算法/資料結構/框架的理由

        ### 解決方案
        ```go
        // 完整可編譯的範例或最小可行程式（含 import / package / main 或測試）
        ```

        ### 備註
        - 風險與替代方案
        - 效能/資源考量與觀測指標
        - 後續擴充與遷移建議

  - name: "Vocabulary Integration"
    details:
      - "Chat 應參照 .github/copilot-vocabulary.yaml 的 forbidden/preferred/mapping"
      - "回應中文字詞應自動正規化（例如：創建→建立、線程→執行緒）"
      - "如與既有程式碼命名衝突，需在回應中明示並給出過渡策略"

  - name: "Validation Checklist"
    checklist:
      - "回應結構清晰，含前提、解法與備註"
      - "程式碼可直接執行/編譯，且通過 formatter/linter"
      - "縮排一致（2 空白）；無行尾空白；行寬合宜"
      - "不含 emoji；技術符號採半形 ASCII；中文/英文間有空白"
      - "術語符合 vocabulary；無 forbidden 詞；必要時已做正規化"
      - "未虛構 API/模組/依賴；新增依賴已標註版本與授權"
      - "錯誤處理與可觀測性達到專案最低要求"
      - "變更邊界最小；未生成第二份通用文件"

# -----------------------------------------------------------------------------
# 放置建議與關聯檔案（方便新成員快速上手）
# -----------------------------------------------------------------------------
placement:
  recommended_path: ".github/copilot-chat-instructions.yaml"
  related_files:
    - ".github/copilot-common.md"
    - ".github/copilot-vocabulary.yaml"
    - ".github/go.instructions.md"
    - ".github/yaml.instructions.md"
    - ".github/ts.instructions.md"
    - ".github/helm.instructions.md"
    - ".github/python.instructions.md"

# -----------------------------------------------------------------------------
# 附錄：執行與驗證提示（可選）
# 這些欄位僅作為文件說明，若要啟用 CI 驗證，請在 Actions 內實作。
# -----------------------------------------------------------------------------
ciHints:
  formatters:
    - language: "go"
      command: "gofmt -s -w . && go vet ./... && golangci-lint run" # 版本與規則在 go.instructions.md
    - language: "yaml"
      command: "yamlfmt -w . || echo '請安裝 yamlfmt'"
  vocabulary_scan:
    # 建議在 CI 以腳本掃描 forbidden 與 normalization（選擇性）
    script_example: "scripts/vocabulary_scan.sh"
    note: "以 .github/copilot-vocabulary.yaml 為準，於 PR 註解指出違規行。"
